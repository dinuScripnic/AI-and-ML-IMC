best_k <- 4
kmeans_model <- kmeans(pixels, centers = best_k)
img <- imager::load.image("./img.jpg")
img <- imager::resize(img, size_x = 256, size_y = 256)
plot(img)
pixels <- as.data.frame(img, wide="c")
setDT(pixels)
# set working directory to the location of the script
if (rstudioapi::isAvailable()) {
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
}
# load libraries
library(data.table)
library(magick)
library(cluster)
library(imager)
library(ggplot2)
img <- imager::load.image("./img.jpg")
img <- imager::resize(img, size_x = 256, size_y = 256)
plot(img)
pixels <- as.data.frame(img, wide="c")
setDT(pixels)
wss <- sapply(1:10, function(k) kmeans(pixels, k)$tot.withinss)
plot(1:10, wss, type = "b", xlab = "Number of clusters", ylab = "Within-cluster sum of squares")
best_k <- 4
kmeans_model <- kmeans(pixels, centers = best_k)
dt_newimg <- data.table(
x = pixels[, x],
y = pixels[, y],
R = km$centers[km$cluster, "c.1"],
G = km$centers[km$cluster, "c.2"],
B = km$centers[km$cluster, "c.3"])
best_k <- 4
km <- kmeans(pixels, centers = best_k)
dt_newimg <- data.table(
x = pixels[, x],
y = pixels[, y],
R = km$centers[km$cluster, "c.1"],
G = km$centers[km$cluster, "c.2"],
B = km$centers[km$cluster, "c.3"])
plot_ly(data = dt_newimg,
x = ~x,
y = ~y,
type = "scattergl",
mode = "markers",
marker = list(color = ~rgb(R, G, B))) |>
layout(yaxis = list(autorange = "reversed", scaleanchor = "x", scaleratio = 1))
best_k <- 4
km <- kmeans(pixels, centers = best_k)
dt_newimg <- data.table(
x = pixels[, x],
y = pixels[, y],
R = km$centers[km$cluster, "c.1"],
G = km$centers[km$cluster, "c.2"],
B = km$centers[km$cluster, "c.3"])
plot_ly(data = dt_newimg,
x = ~x,
y = ~y,
type = "scattergl",
mode = "markers",
marker = list(color = ~rgb(R, G, B))) |>
layout(yaxis = list(autorange = "reversed", scaleanchor = "x", scaleratio = 1))
best_k <- 4
kmeans_model <- kmeans(pixels, centers = best_k)
dt_newimg <- data.table(
x = pixels[, x],
y = pixels[, y],
R = kmeans_model$centers[kmeans_model$cluster, "c.1"],
G = kmeans_model$centers[kmeans_model$cluster, "c.2"],
B = kmeans_model$centers[kmeans_model$cluster, "c.3"])
plot_ly(data = dt_newimg,
x = ~x,
y = ~y,
type = "scattergl",
mode = "markers",
marker = list(color = ~rgb(R, G, B))) |>
layout(yaxis = list(autorange = "reversed", scaleanchor = "x", scaleratio = 1))
best_k <- 4
km <- kmeans(pixels, centers = best_k)
img <- imager::load.image("./img.jpg")
img <- imager::resize(img, size_x = 256, size_y = 256)
plot(img)
pixels <- as.data.frame(img, wide="c")
setDT(pixels)
# set working directory to the location of the script
if (rstudioapi::isAvailable()) {
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
}
# load libraries
library(data.table)
library(magick)
library(cluster)
library(imager)
library(ggplot2)
img <- imager::load.image("./img.jpg")
img <- imager::resize(img, size_x = 256, size_y = 256)
plot(img)
pixels <- as.data.frame(img, wide="c")
setDT(pixels)
wss <- sapply(1:10, function(k) kmeans(pixels, k)$tot.withinss)
plot(1:10, wss, type = "b", xlab = "Number of clusters", ylab = "Within-cluster sum of squares")
best_k <- 4
km <- kmeans(pixels, centers = best_k)
dt_newimg <- data.table(
x = pixels[, x],
y = pixels[, y],
R = km$centers[km$cluster, "c.1"],
G = km$centers[km$cluster, "c.2"],
B = km$centers[km$cluster, "c.3"])
plot_ly(data = dt_newimg,
x = ~x,
y = ~y,
type = "scattergl",
mode = "markers",
marker = list(color = ~rgb(R, G, B))) |>
layout(yaxis3 = list(autorange = "reversed", scaleanchor = "x", scaleratio = 1))
best_k <- 4
km <- kmeans(pixels, centers = best_k)
dt_newimg <- data.table(
x = pixels[, x],
y = pixels[, y],
R = km$centers[km$cluster, "c.1"],
G = km$centers[km$cluster, "c.2"],
B = km$centers[km$cluster, "c.3"])
plot_ly(data = dt_newimg,
x = ~x,
y = ~y,
type = "scattergl",
mode = "markers",
marker = list(color = ~rgb(R, G, B))) |>
layout(yaxis = list(autorange = "reversed", scaleanchor = "x", scaleratio = 1))
best_k <- 4
km <- kmeans(pixels, centers = best_k)
dt_newimg <- data.table(
x = pixels[, x],
y = pixels[, y],
R = km$centers[km$cluster, "c.1"],
G = km$centers[km$cluster, "c.2"],
B = km$centers[km$cluster, "c.3"])
plot_ly(data = dt_newimg,
x = ~x,
y = ~y,
type = "scattergl",
mode = "markers",
marker = list(color = ~rgb(R, G, B))) |>
layout(yaxis3 = list(autorange = "reversed", scaleanchor = "x", scaleratio = 1))
best_k <- 4
km <- kmeans(pixels, centers = best_k)
dt_newimg <- data.table(
x = pixels[, x],
y = pixels[, y],
R = km$centers[km$cluster, "c.1"],
G = km$centers[km$cluster, "c.2"],
B = km$centers[km$cluster, "c.3"])
plot_ly(data = dt_newimg,
x = ~x,
y = ~y,
type = "scattergl",
mode = "markers",
marker = list(color = ~rgb(R, G, B))) |>
layout(yaxis = list(autorange = "reversed", scaleanchor = "x", scaleratio = 1))
best_k <- 4
km <- kmeans(pixels, centers = best_k)
dt_newimg <- data.table(
x = pixels[, x],
y = pixels[, y],
R = km$centers[km$cluster, "c.1"],
G = km$centers[km$cluster, "c.2"],
B = km$centers[km$cluster, "c.3"])
plot_ly(data = dt_newimg,
x = ~x,
y = ~y,
type = "scattergl",
mode = "markers",
marker = list(color = ~rgb(R, G, B))) |>
#  layout(yaxis = list(autorange = "reversed", scaleanchor = "x", scaleratio = 1))
# fviz_cluster(km, data = dt_rgb) # if there are more than 2 dim, it uses PCA
best_k <- 4
km <- kmeans(pixels, centers = best_k)
dt_newimg <- data.table(
x = pixels[, x],
y = pixels[, y],
R = km$centers[km$cluster, "c.1"],
G = km$centers[km$cluster, "c.2"],
B = km$centers[km$cluster, "c.3"])
plot_ly(data = dt_newimg,
x = ~x,
y = ~y,
type = "scattergl",
mode = "markers",
marker = list(color = ~rgb(R, G, B))) |>
layout(yaxis = list(autorange = "reversed", scaleanchor = "x", scaleratio = 1))
best_k <- 4
km <- kmeans(pixels, centers = best_k)
dt_newimg <- data.table(
x = pixels[, x],
y = pixels[, y],
R = km$centers[km$cluster, "c.1"],
G = km$centers[km$cluster, "c.2"],
B = km$centers[km$cluster, "c.3"])
plot_ly(data = dt_newimg,
x = ~x,
y = ~y,
type = "scattergl",
mode = "markers",
marker = list(color = ~rgb(R, G, B))) |>
layout(yaxis3 = list(autorange = "reversed", scaleanchor = "x", scaleratio = 1))
best_k <- 4
km <- kmeans(pixels, centers = best_k)
dt_newimg <- data.table(
x = pixels[, x],
y = pixels[, y],
R = km$centers[km$cluster, "c.1"],
G = km$centers[km$cluster, "c.2"],
B = km$centers[km$cluster, "c.3"])
plot_ly(data = dt_newimg,
x = ~x,
y = ~y,
type = "scattergl",
mode = "markers",
marker = list(color = ~rgb(R, G, B))) |>
layout(yaxis = list(autorange = "reversed", scaleanchor = "x", scaleratio = 1))
# set working directory to the location of the script
if (rstudioapi::isAvailable()) {
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
}
# load libraries
library(data.table)
library(magick)
library(cluster)
library(imager)
library(ggplot2)
library(plotly)
best_k <- 4
km <- kmeans(pixels, centers = best_k)
dt_newimg <- data.table(
x = pixels[, x],
y = pixels[, y],
R = km$centers[km$cluster, "c.1"],
G = km$centers[km$cluster, "c.2"],
B = km$centers[km$cluster, "c.3"])
plot_ly(data = dt_newimg,
x = ~x,
y = ~y,
type = "scattergl",
mode = "markers",
marker = list(color = ~rgb(R, G, B))) |>
layout(yaxis = list(autorange = "reversed", scaleanchor = "x", scaleratio = 1))
# fviz_cluster(km, data = dt_rgb) # if there are more than 2 dim, it uses PCA
best_k <- 4
km <- kmeans(pixels, centers = best_k)
dt_newimg <- data.table(
x = pixels[, x],
y = pixels[, y],
R = km$centers[km$cluster, "c.1"],
G = km$centers[km$cluster, "c.2"],
B = km$centers[km$cluster, "c.3"])
dt_newimg
plot_ly(data = dt_newimg,
x = ~x,
y = ~y,
type = "scattergl",
mode = "markers",
marker = list(color = ~rgb(R, G, B))) |>
layout(yaxis = list(autorange = "reversed", scaleanchor = "x", scaleratio = 1))
best_k <- 4
km <- kmeans(pixels, centers = best_k)
dt_newimg <- data.table(
x = pixels[, x],
y = pixels[, y],
R = km$centers[km$cluster, "c.1"],
G = km$centers[km$cluster, "c.2"],
B = km$centers[km$cluster, "c.3"])
dt_newimg
plot_ly(data = dt_newimg,
x = ~x,
y = ~y,
type = "scattergl",
mode = "markers",
marker = list(color = ~rgb(R, G, B))) |>
layout(yaxis = list(autorange = "reversed", scaleanchor = "x", scaleratio = 1))
best_k <- 4
km <- kmeans(pixels, centers = best_k)
dt_newimg <- data.table(
x = pixels[, x],
y = pixels[, y],
R = km$centers[km$cluster, "c.1"],
G = km$centers[km$cluster, "c.2"],
B = km$centers[km$cluster, "c.3"])
dt_newimg
plot_ly(data = dt_newimg,
x = ~x,
y = ~y,
type = "scattergl",
mode = "markers",
marker = list(color = ~rgb(R, G, B))) |>
layout(yaxis = list(autorange = "reversed", scaleanchor = "x", scaleratio = 1))
best_k <- 4
km <- kmeans(dt_rgb, centers = best_k, nstart = 20)
best_k <- 4
km <- kmeans(pixels, centers = best_k, nstart = 20)
dt_newimg <- data.table(
x = dt_img[, x],
y = dt_img[, y],
R = km$centers[km$cluster, "R"],
G = km$centers[km$cluster, "G"],
B = km$centers[km$cluster, "B"])
best_k <- 4
km <- kmeans(pixels, centers = best_k, nstart = 20)
dt_newimg <- data.table(
x = img[, x],
y = img[, y],
R = km$centers[km$cluster, "R"],
G = km$centers[km$cluster, "G"],
B = km$centers[km$cluster, "B"])
best_k <- 4
km <- kmeans(pixels, centers = best_k, nstart = 20)
dt_newimg <- data.table(
x = pixels[, x],
y = pixels[, y],
R = km$centers[km$cluster, "R"],
G = km$centers[km$cluster, "G"],
B = km$centers[km$cluster, "B"])
img <- imager::load.image("./img.jpg")
img <- imager::resize(img, size_x = 256, size_y = 256)
plot(img)
pixels <- as.data.frame(img, wide="c")
setDT(pixels)
best_k <- 4
km <- kmeans(pixels, centers = best_k, nstart = 20)
dt_newimg <- data.table(
x = img[, x],
y = img[, y],
R = km$centers[km$cluster, "R"],
G = km$centers[km$cluster, "G"],
B = km$centers[km$cluster, "B"])
best_k <- 4
km <- kmeans(pixels, centers = best_k, nstart = 20)
dt_newimg <- data.table(
x = pixels[, x],
y = pixels[, y],
R = km$centers[km$cluster, "c.1"],
G = km$centers[km$cluster, "c.2"],
B = km$centers[km$cluster, "c.3"])
plot_ly(data = dt_newimg,
x = ~x,
y = ~y,
type = "scattergl",
mode = "markers",
marker = list(color = ~rgb(R, G, B))) |>
layout(yaxis = list(autorange = "reversed", scaleanchor = "x", scaleratio = 1))
best_k <- 4
km <- kmeans(pixels, centers = best_k, nstart = 20)
dt_newimg <- data.table(
x = pixels[, x],
y = pixels[, y],
R = km$centers[km$cluster, "B"],
G = km$centers[km$cluster, "G"],
B = km$centers[km$cluster, "R"])
best_k <- 4
km <- kmeans(pixels, centers = best_k, nstart = 20)
dt_newimg <- data.table(
x = pixels[, x],
y = pixels[, y],
R = km$centers[km$cluster, "c.1"],
G = km$centers[km$cluster, "c.2"],
B = km$centers[km$cluster, "c.3"])
plot_ly(data = dt_newimg,
x = ~x,
y = ~y,
type = "scattergl",
mode = "markers",
marker = list(color = ~rgb(R, G, B))) |>
layout(yaxis = list(autorange = "reversed", scaleanchor = "x", scaleratio = 1))
best_k <- 4
km <- kmeans(pixels, centers = best_k, nstart = 20)
dt_newimg <- data.table(
x = img[, x],
y = img[, y],
R = km$centers[km$cluster, "c.1"],
G = km$centers[km$cluster, "c.2"],
B = km$centers[km$cluster, "c.3"])
best_k <- 4
km <- kmeans(pixels, centers = best_k, nstart = 20)
dt_newimg <- data.table(
x = pixels[, x],
y = pixels[, y],
R = km$centers[km$cluster, "c.1"],
G = km$centers[km$cluster, "c.2"],
B = km$centers[km$cluster, "c.3"])
plot_ly(data = dt_newimg,
x = ~x,
y = ~y,
type = "scattergl",
mode = "markers",
marker = list(color = ~rgb(R, G, B))) |>
layout(yaxis = list(autorange = "reversed", scaleanchor = "x", scaleratio = 1))
img <- imager::load.image("./img.jpg")
img <- imager::resize(img, size_x = 256, size_y = 256)
plot(img)
pixels <- as.data.frame(img, wide="c")
rgb_dt <- pixels[,.(c.1,c.2,c.3)]
img <- imager::load.image("./img.jpg")
img <- imager::resize(img, size_x = 256, size_y = 256)
plot(img)
pixels <- as.data.frame(img, wide="c")
pixels
rgb_dt <- pixels[,.(c.1,c.2,c.3)]
